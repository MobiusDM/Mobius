---
name: Auto Label Issues

on:
  issues:
    types: [opened, edited]

permissions:
  contents: read
  issues: write

jobs:
  label:
    runs-on: ubuntu-latest
    steps:
      - name: Label issues based on content
        uses: actions/github-script@v7
        script: |
          const { owner, repo, number } = context.issue;
          const issue = await github.rest.issues.get({
            owner,
            repo,
            issue_number: number
          });

          const title = issue.data.title.toLowerCase();
          const body = (issue.data.body || '').toLowerCase();
          const labels = [];

          // Check title for common patterns
          if (title.includes('[bug]') || title.includes('bug')) {
            labels.push('bug');
          }
          if (title.includes('[feature]') || title.includes('feature') || title.includes('enhancement')) {
            labels.push('enhancement');
          }
          if (title.includes('[docs]') || title.includes('documentation')) {
            labels.push('documentation');
          }
          if (title.includes('[security]') || title.includes('security')) {
            labels.push('security');
          }
          if (title.includes('release qa')) {
            labels.push('release', 'qa', '~engineering-initiated');
          }

          // Check body content for additional context
          if (body.includes('steps to reproduce')) {
            labels.push('bug');
          }
          if (body.includes('feature description') || body.includes('proposed solution')) {
            labels.push('enhancement');
          }
          if (body.includes('security issue') || body.includes('vulnerability')) {
            labels.push('security');
          }
          if (body.includes('documentation issue')) {
            labels.push('documentation');
          }

          // Add priority labels based on keywords
          if (title.includes('urgent') || title.includes('critical') || body.includes('urgent') || body.includes('critical')) {
            labels.push('priority/high');
          }

          // Check for platform-specific issues
          if (body.includes('macos') || body.includes('mac os')) {
            labels.push('platform/macos');
          }
          if (body.includes('windows')) {
            labels.push('platform/windows');
          }
          if (body.includes('linux')) {
            labels.push('platform/linux');
          }
          if (body.includes('ios')) {
            labels.push('platform/ios');
          }
          if (body.includes('android')) {
            labels.push('platform/android');
          }

          // Apply labels if any were identified
          if (labels.length > 0) {
            await github.rest.issues.addLabels({
              owner,
              repo,
              issue_number: number,
              labels: labels
            });
          }

      - name: Add triage label to new issues
        uses: actions/github-script@v7
        if: github.event.action == 'opened'
        with:
        script: |
          const { owner, repo, number } = context.issue;

          // Check if issue already has labels from template
          const issue = await github.rest.issues.get({
            owner,
            repo,
            issue_number: number
          });

          // Only add triage if no other labels are present
          if (issue.data.labels.length === 0) {
            await github.rest.issues.addLabels({
              owner,
              repo,
              issue_number: number,
              labels: ['triage']
            });
          }
