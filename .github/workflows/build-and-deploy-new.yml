name: Build and Deploy Mobius

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  # Test and Build
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version-file: 'go.work'
        cache-dependency-path: '**/go.sum'
    
    - name: Run tests
      run: |
        # Test mobius-server
        cd mobius-server && go test -v ./...
        
        # Test mobius-cli
        cd ../mobius-cli && go test -v ./...
        
        # Test mobius-client
        cd ../mobius-client && go test -v ./...
        
        # Test shared packages
        cd ../shared && go test -v ./...

  # Build Docker Images
  build:
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        component: [server, cli, client, combined]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Extract metadata for ${{ matrix.component }}
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ matrix.component }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=sha
    
    - name: Build and push ${{ matrix.component }} Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ${{ matrix.component == 'combined' && './Dockerfile.combined' || format('./mobius-{0}/Dockerfile', matrix.component) }}
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  # Create Release
  release:
    runs-on: ubuntu-latest
    needs: [test, build]
    if: github.event_name == 'release'
    permissions:
      contents: write
      packages: write
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version-file: 'go.work'
        cache-dependency-path: '**/go.sum'

    - name: Build release binaries
      run: |
        # Build server for multiple platforms
        cd mobius-server
        GOOS=linux GOARCH=amd64 go build -o mobius-server-linux-amd64 ./cmd/mobius
        GOOS=linux GOARCH=arm64 go build -o mobius-server-linux-arm64 ./cmd/mobius
        GOOS=darwin GOARCH=amd64 go build -o mobius-server-darwin-amd64 ./cmd/mobius
        GOOS=darwin GOARCH=arm64 go build -o mobius-server-darwin-arm64 ./cmd/mobius
        GOOS=windows GOARCH=amd64 go build -o mobius-server-windows-amd64.exe ./cmd/mobius
        
        # Build CLI for multiple platforms
        cd ../mobius-cli
        GOOS=linux GOARCH=amd64 go build -o mobiuscli-linux-amd64 ./cmd/mobiuscli
        GOOS=linux GOARCH=arm64 go build -o mobiuscli-linux-arm64 ./cmd/mobiuscli
        GOOS=darwin GOARCH=amd64 go build -o mobiuscli-darwin-amd64 ./cmd/mobiuscli
        GOOS=darwin GOARCH=arm64 go build -o mobiuscli-darwin-arm64 ./cmd/mobiuscli
        GOOS=windows GOARCH=amd64 go build -o mobiuscli-windows-amd64.exe ./cmd/mobiuscli
        
        # Build client for multiple platforms
        cd ../mobius-client
        GOOS=linux GOARCH=amd64 go build -o mobius-client-linux-amd64 ./cmd/client
        GOOS=linux GOARCH=arm64 go build -o mobius-client-linux-arm64 ./cmd/client
        GOOS=darwin GOARCH=amd64 go build -o mobius-client-darwin-amd64 ./cmd/client
        GOOS=darwin GOARCH=arm64 go build -o mobius-client-darwin-arm64 ./cmd/client
        GOOS=windows GOARCH=amd64 go build -o mobius-client-windows-amd64.exe ./cmd/client
    
    - name: Upload Server Binaries
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./mobius-server/mobius-server-linux-amd64
        asset_name: mobius-server-linux-amd64
        asset_content_type: application/octet-stream
    
    - name: Upload CLI Binaries
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./mobius-cli/mobiuscli-linux-amd64
        asset_name: mobiuscli-linux-amd64
        asset_content_type: application/octet-stream
    
    - name: Upload Client Binaries
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./mobius-client/mobius-client-linux-amd64
        asset_name: mobius-client-linux-amd64
        asset_content_type: application/octet-stream
    
    # Add more upload steps for other platforms as needed...
