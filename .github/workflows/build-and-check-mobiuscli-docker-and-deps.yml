name: Build mobiuscli container dependencies and check vulnerabilities

on:
  workflow_dispatch:
  schedule:
    - cron: "0 6 * * *"

# This allows a subsequently queued workflow run to interrupt previous runs
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id}}
  cancel-in-progress: true

defaults:
  run:
    # fail-fast using bash -eo pipefail. See https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#exit-codes-and-error-action-preference
    shell: bash

permissions:
  contents: read

jobs:
  build-and-check:
    runs-on: ubuntu-22.04
    permissions:
      packages: write
      contents: write
      actions: write
      id-token: write # for aws-actions/configure-aws-credentials
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Set up Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: "mobius-cli/go.mod"

      - name: Build ghcr.io/notawar/wix
        run: make wix-docker

      - name: Build ghcr.io/notawar/bomutils
        run: make bomutils-docker

      - name: Build ghcr.io/notawar/mobiuscli
        run: make mobiuscli-docker

      - name: List VEX files
        id: generate_vex_files
        run: |
          echo "VEX_FILES=$(ls -1 ./security/vex/mobiuscli/ | while IFS= read -r line; do echo "./security/vex/mobiuscli/$line"; done | tr '\n' ',' | sed 's/.$//')" >> $GITHUB_OUTPUT

      # We use the trivy command and not the github action because it doesn't support loading VEX files yet.
      - name: Run Trivy vulnerability scanner on ghcr.io/notawar/mobiuscli
        env:
          TRIVY_DB_REPOSITORY: public.ecr.aws/aquasecurity/trivy-db
          TRIVY_JAVA_DB_REPOSITORY: public.ecr.aws/aquasecurity/trivy-java-db
        run: |
          mkdir trivy-download
          cd trivy-download
          curl -L https://github.com/aquasecurity/trivy/releases/download/v0.61.0/trivy_0.61.0_Linux-64bit.tar.gz --output trivy_0.61.0_Linux-64bit.tar.gz
          tar -xf trivy_0.61.0_Linux-64bit.tar.gz
          mv trivy ..
          cd ..
          chmod +x ./trivy
          ./trivy image \
            --exit-code=1 \
            --ignore-unfixed \
            --pkg-types=os,library \
            --severity=HIGH,CRITICAL \
            --vex="${{ steps.generate_vex_files.outputs.VEX_FILES }}" \
            ghcr.io/notawar/mobiuscli

      - name: Run Trivy vulnerability scanner on ghcr.io/notawar/wix
        uses: aquasecurity/trivy-action@6c175e9c4083a92bbca2f9724c8a5e33bc2d97a5 # 0.30.0
        env:
          TRIVY_DB_REPOSITORY: public.ecr.aws/aquasecurity/trivy-db
          TRIVY_JAVA_DB_REPOSITORY: public.ecr.aws/aquasecurity/trivy-java-db
        with:
          image-ref: "ghcr.io/notawar/wix"
          format: "table"
          exit-code: "1"
          ignore-unfixed: true
          vuln-type: "os,library"
          severity: "CRITICAL"

      - name: Run Trivy vulnerability scanner on ghcr.io/notawar/bomutils
        uses: aquasecurity/trivy-action@6c175e9c4083a92bbca2f9724c8a5e33bc2d97a5 # 0.30.0
        env:
          TRIVY_DB_REPOSITORY: public.ecr.aws/aquasecurity/trivy-db
          TRIVY_JAVA_DB_REPOSITORY: public.ecr.aws/aquasecurity/trivy-java-db
        with:
          image-ref: "ghcr.io/notawar/bomutils"
          format: "table"
          exit-code: "1"
          ignore-unfixed: true
          vuln-type: "os,library"
          severity: "CRITICAL"


