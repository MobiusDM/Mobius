name: Build and Deploy Mobius

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]
  workflow_dispatch:

concurrency:
  group: build-and-deploy-${{ github.ref }}
  cancel-in-progress: true

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v5.0.0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.work'
          cache-dependency-path: |
            mobius-server/go.sum
            mobius-cli/go.sum
            mobius-client/go.sum
            mobius-cocoon/go.sum
            shared/go.sum

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: mobius-web/package-lock.json

      - name: Sync workspace and download dependencies
        shell: bash
        run: |
          set -euo pipefail
          go work sync
          (cd mobius-server && go mod download)
          (cd mobius-cli && go mod download)
          (cd mobius-client && go mod download)
          (cd mobius-cocoon && go mod download)
          (cd shared && go mod download)

      - name: Install frontend dependencies
        shell: bash
        run: |
          cd mobius-web
          npm ci

      - name: Build frontend
        shell: bash
        run: |
          cd mobius-web
          npm run build

      - name: Run frontend tests
        shell: bash
        run: |
          cd mobius-web
          npm test

      - name: Run Go tests (all modules)
        shell: bash
        run: |
          set -euo pipefail
          go test -count=1 ./mobius-server/... ./mobius-cli/... ./mobius-client/... ./mobius-cocoon/... ./shared/...

      - name: Build binaries sanity (server and CLI)
        shell: bash
        run: |
          set -euo pipefail
          # Copy frontend build to server
          mkdir -p mobius-server/static
          cp -r mobius-web/build/* mobius-server/static/ || echo "No frontend build to copy"
          (cd mobius-server && go build ./cmd/api-server)
          (cd mobius-cli && go build ./cmd/mobiuscli)

  build:
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write
    strategy:
      matrix:
        component: [server, cli, client, cocoon]
    steps:
      - uses: actions/checkout@v5.0.0

      - name: Normalize image name to lowercase (GHCR requirement)
        id: imagename
        shell: bash
        run: |
          set -euo pipefail
          lower=$(echo "${{ env.IMAGE_NAME }}" | tr '[:upper:]' '[:lower:]')
          echo "lower=${lower}" >> "$GITHUB_OUTPUT"

      # Additional build steps remain to be implemented or were truncated in the original file.
