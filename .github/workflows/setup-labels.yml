name: Setup Repository Labels

"on":
  workflow_dispatch: # Manual trigger
  push:
    paths:
      - '.github/labels.yml'
    branches:
      - main

permissions:
  issues: write
  pull-requests: write

jobs:
  setup-labels:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup labels
      uses: actions/github-script@v7
      with:
        script: |
          const labels = [
            // Type labels
            { name: 'bug', color: 'd73a4a', description: 'Something isn\'t working' },
            { name: 'enhancement', color: 'a2eeef', description: 'New feature or request' },
            { name: 'documentation', color: '0075ca', description: 'Improvements or additions to documentation' },
            { name: 'security', color: 'b60205', description: 'Security related issues' },
            { name: 'testing', color: '1d76db', description: 'Related to testing' },
            { name: 'refactor', color: 'ededed', description: 'Code refactoring' },
            { name: 'performance', color: 'f9d0c4', description: 'Performance improvements' },
            
            // Component labels
            { name: 'backend', color: '0052cc', description: 'Backend/server related changes' },
            { name: 'frontend', color: '1f77b4', description: 'Frontend/UI related changes' },
            { name: 'cli', color: '2ca02c', description: 'Command line interface related' },
            { name: 'client', color: 'd62728', description: 'Client library related' },
            { name: 'cocoon', color: 'ff7f0e', description: 'Cocoon component related' },
            { name: 'database', color: '17becf', description: 'Database related changes' },
            { name: 'deployment', color: '8c564b', description: 'Deployment related changes' },
            
            // Process labels
            { name: 'triage', color: 'fbca04', description: 'Needs initial review and categorization' },
            { name: 'work-in-progress', color: 'fef2c0', description: 'Work in progress' },
            { name: 'breaking-change', color: 'b60205', description: 'Introduces breaking changes' },
            { name: 'ci/cd', color: '006b75', description: 'CI/CD related changes' },
            { name: 'configuration', color: 'c5def5', description: 'Configuration related changes' },
            { name: 'dependencies', color: '0366d6', description: 'Dependency updates' },
            
            // Priority labels
            { name: 'priority/high', color: 'e11d21', description: 'High priority' },
            { name: 'priority/medium', color: 'fbca04', description: 'Medium priority' },
            { name: 'priority/low', color: '009800', description: 'Low priority' },
            
            // Size labels
            { name: 'size/small', color: 'c2e0c6', description: 'Small changes (1-5 files)' },
            { name: 'size/medium', color: 'fff2c7', description: 'Medium changes (6-15 files)' },
            { name: 'size/large', color: 'ffeaa7', description: 'Large changes (16-50 files)' },
            { name: 'size/extra-large', color: 'fd79a8', description: 'Extra large changes (50+ files)' },
            
            // Platform labels
            { name: 'platform/macos', color: '000000', description: 'macOS specific' },
            { name: 'platform/windows', color: '0078d4', description: 'Windows specific' },
            { name: 'platform/linux', color: 'ffa500', description: 'Linux specific' },
            { name: 'platform/ios', color: '999999', description: 'iOS specific' },
            { name: 'platform/android', color: '3ddc84', description: 'Android specific' },
            
            // Workflow labels
            { name: 'release', color: '006b75', description: 'Release related' },
            { name: 'qa', color: '7057ff', description: 'Quality assurance' },
            { name: '~engineering-initiated', color: 'bfd4f2', description: 'Engineering initiated issue' },
            { name: 'stale', color: 'cccccc', description: 'Stale issue or PR' }
          ];

          const { owner, repo } = context.repo;

          for (const label of labels) {
            try {
              // Try to update existing label
              await github.rest.issues.updateLabel({
                owner,
                repo,
                name: label.name,
                color: label.color,
                description: label.description
              });
              console.log(`Updated label: ${label.name}`);
            } catch (error) {
              if (error.status === 404) {
                // Label doesn't exist, create it
                try {
                  await github.rest.issues.createLabel({
                    owner,
                    repo,
                    name: label.name,
                    color: label.color,
                    description: label.description
                  });
                  console.log(`Created label: ${label.name}`);
                } catch (createError) {
                  console.error(`Failed to create label ${label.name}:`, createError.message);
                }
              } else {
                console.error(`Failed to update label ${label.name}:`, error.message);
              }
            }
          }