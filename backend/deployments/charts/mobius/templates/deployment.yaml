---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mobius
    chart: mobius
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
  name: mobius
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: mobius
      chart: mobius
      component: mobius-server
      heritage: {{ .Release.Service }}
      release: {{ .Release.Name }}
  template:
    metadata:
{{- with .Values.podAnnotations }}
      annotations:
{{- toYaml . | trim | nindent 8 }}
{{- end }}
      labels:
        app: mobius
        chart: mobius
        component: mobius-server
        heritage: {{ .Release.Service }}
        release: {{ .Release.Name }}
    spec:
      containers:
      - name: mobius
        command: [/usr/bin/mobius]
        args: ["serve"]
        image: "{{ .Values.imageRepository }}:{{ .Values.imageTag }}"
        ports:
        - name: mobius
          containerPort: {{ .Values.mobius.listenPort }}
        resources:
          limits:
            cpu: {{ .Values.resources.limits.cpu }}
            memory: {{ .Values.resources.limits.memory }}
          requests:
            cpu: {{ .Values.resources.requests.cpu }}
            memory: {{ .Values.resources.requests.memory }}
        env:
          ## BEGIN MOBIUS SECTION
          - name: MOBIUS_VULNERABILITIES_DATABASES_PATH
            value: /tmp/vuln # /tmp might not work on all cloud providers by default
          - name: MOBIUS_SERVER_ADDRESS
            value: "0.0.0.0:{{ .Values.mobius.listenPort }}"
          - name: MOBIUS_AUTH_BCRYPT_COST
            value: "{{ .Values.mobius.auth.bcryptCost }}"
          - name: MOBIUS_AUTH_SALT_KEY_SIZE
            value: "{{ .Values.mobius.auth.saltKeySize }}"
          - name: MOBIUS_APP_TOKEN_KEY_SIZE
            value: "{{ .Values.mobius.app.tokenKeySize }}"
          - name: MOBIUS_APP_TOKEN_VALIDITY_PERIOD
            value: "{{ .Values.mobius.app.inviteTokenValidityPeriod }}"
          - name: MOBIUS_SESSION_KEY_SIZE
            value: "{{ .Values.mobius.session.keySize }}"
          - name: MOBIUS_SESSION_DURATION
            value: "{{ .Values.mobius.session.duration }}"
          - name: MOBIUS_LOGGING_DEBUG
            value: "{{ .Values.mobius.logging.debug }}"
          - name: MOBIUS_LOGGING_JSON
            value: "{{ .Values.mobius.logging.json }}"
          - name: MOBIUS_LOGGING_DISABLE_BANNER
            value: "{{ .Values.mobius.logging.disableBanner }}"
          - name: MOBIUS_SERVER_TLS
            value: "{{ .Values.mobius.tls.enabled }}"
          {{- if .Values.mobius.tls.enabled }}
          - name: MOBIUS_SERVER_TLS_COMPATIBILITY
            value: "{{ .Values.mobius.tls.compatibility }}"
          - name: MOBIUS_SERVER_CERT
            value: "/secrets/tls/{{ .Values.mobius.tls.certSecretKey }}"
          - name: MOBIUS_SERVER_KEY
            value: "/secrets/tls/{{ .Values.mobius.tls.keySecretKey }}"
          {{- end }}
          {{- if ne .Values.mobius.carving.s3.bucketName "" }}
          - name: MOBIUS_S3_BUCKET
            value: "{{ .Values.mobius.carving.s3.bucketName }}"
          - name: MOBIUS_S3_PREFIX
            value: "{{ .Values.mobius.carving.s3.prefix }}"
          {{- if ne .Values.mobius.carving.s3.accessKeyID "" }}
          - name: MOBIUS_S3_ACCESS_KEY_ID
            value: "{{ .Values.mobius.carving.s3.accessKeyID }}"
          - name: MOBIUS_S3_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: "{{ .Values.mobius.secretName }}"
                key: "{{ .Values.mobius.carving.s3.secretKey }}"
          {{ else }}
          - name: MOBIUS_S3_STS_ASSUME_ROLE_ARN
            value: "{{ .Values.mobius.carving.s3.stsAssumeRoleARN }}"
          {{- end }}
          {{- end }}
          {{- if .Values.mobius.license.secretName }}
          - name: MOBIUS_LICENSE_KEY
            valueFrom:
              secretKeyRef:
                key: {{ .Values.mobius.license.licenseKey }}
                name: {{ .Values.mobius.license.secretName }}
          {{- end }}
          ## END MOBIUS SECTION
          ## BEGIN MYSQL SECTION
          - name: MOBIUS_MYSQL_ADDRESS
            value: "{{ .Values.database.address }}"
          - name: MOBIUS_MYSQL_DATABASE
            value: "{{ .Values.database.database }}"
          - name: MOBIUS_MYSQL_USERNAME
            value: "{{ .Values.database.username }}"
          - name: MOBIUS_MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.database.secretName }}
                key: {{ .Values.database.passwordKey }}
          - name: MOBIUS_MYSQL_MAX_OPEN_CONNS
            value: "{{ .Values.database.maxOpenConns }}"
          - name: MOBIUS_MYSQL_MAX_IDLE_CONNS
            value: "{{ .Values.database.maxIdleConns }}"
          - name: MOBIUS_MYSQL_CONN_MAX_LIFETIME
            value: "{{ .Values.database.connMaxLifetime }}"
          {{- if .Values.database.tls.enabled }}
          {{- if .Values.database.tls.caCertKey }}
          - name: MOBIUS_MYSQL_TLS_CA
            value: "/secrets/mysql/{{ .Values.database.tls.caCertKey }}"
          {{- end }}
          {{- if .Values.database.tls.certKey }}
          - name: MOBIUS_MYSQL_TLS_CERT
            value: "/secrets/mysql/{{ .Values.database.tls.certKey }}"
          {{- end }}
          {{- if .Values.database.tls.keyKey }}
          - name: MOBIUS_MYSQL_TLS_KEY
            value: "/secrets/mysql/{{ .Values.database.tls.keyKey }}"
          {{- end }}
          - name: MOBIUS_MYSQL_TLS_CONFIG
            value: "{{ .Values.database.tls.config }}"
          - name: MOBIUS_MYSQL_TLS_SERVER_NAME
            value: "{{ .Values.database.tls.serverName }}"
          {{- end }}
          ## END MYSQL SECTION
          ## BEGIN MYSQL READ REPLICA SECTION
          {{- if .Values.database_read_replica }}
          {{- if .Values.database_read_replica.address }}
          - name: MOBIUS_MYSQL_READ_REPLICA_ADDRESS
            value: "{{ .Values.database_read_replica.address }}"
          {{- end }}
          {{- if .Values.database_read_replica.database }}
          - name: MOBIUS_MYSQL_READ_REPLICA_DATABASE
            value: "{{ .Values.database_read_replica.database }}"
          {{- end }}
          {{- if .Values.database_read_replica.username }}
          - name: MOBIUS_MYSQL_READ_REPLICA_USERNAME
            value: "{{ .Values.database_read_replica.username }}"
          {{- end }}
          {{- if .Values.database_read_replica.passwordPath }}
          - name: MOBIUS_MYSQL_READ_REPLICA_PASSWORD_PATH
            value: "{{ .Values.database_read_replica.passwordPath }}"
          {{- end }}
          {{- if .Values.database_read_replica.secretName }}
          - name: MOBIUS_MYSQL_READ_REPLICA_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.database_read_replica.secretName }}
                key: {{ .Values.database_read_replica.passwordKey }}
          {{- end }}
          {{- if .Values.database_read_replica.maxOpenConns }}
          - name: MOBIUS_MYSQL_READ_REPLICA_MAX_OPEN_CONNS
            value: "{{ .Values.database_read_replica.maxOpenConns }}"
          {{- end }}
          {{- if .Values.database_read_replica.maxIdleConns }}
          - name: MOBIUS_MYSQL_READ_REPLICA_MAX_IDLE_CONNS
            value: "{{ .Values.database_read_replica.maxIdleConns }}"
          {{- end }}
          {{- if .Values.database_read_replica.connMaxLifetime }}
          - name: MOBIUS_MYSQL_READ_REPLICA_CONN_MAX_LIFETIME
            value: "{{ .Values.database_read_replica.connMaxLifetime }}"
          {{- end }}
          {{- if .Values.database_read_replica.tls.enabled }}
          {{- if .Values.database_read_replica.tls.caCertKey }}
          - name: MOBIUS_MYSQL_READ_REPLICA_TLS_CA
            value: "/secrets/mysql/{{ .Values.database_read_replica.tls.caCertKey }}"
          {{- end }}
          {{- if .Values.database_read_replica.tls.certKey }}
          - name: MOBIUS_MYSQL_READ_REPLICA_TLS_CERT
            value: "/secrets/mysql/{{ .Values.database_read_replica.tls.certKey }}"
          {{- end }}
          {{- if .Values.database_read_replica.tls.keyKey }}
          - name: MOBIUS_MYSQL_READ_REPLICA_TLS_KEY
            value: "/secrets/mysql/{{ .Values.database_read_replica.tls.keyKey }}"
          {{- end }}
          {{- if .Values.database_read_replica.tls.config }}
          - name: MOBIUS_MYSQL_READ_REPLICA_TLS_CONFIG
            value: "{{ .Values.database_read_replica.tls.config }}"
          {{- end }}
          {{- if .Values.database_read_replica.tls.serverName }}
          - name: MOBIUS_MYSQL_READ_REPLICA_TLS_SERVER_NAME
            value: "{{ .Values.database_read_replica.tls.serverName }}"
          {{- end }}
          {{- end }}
          {{- end }}
          ## END MYSQL READ REPLICA SECTION
          ## BEGIN REDIS SECTION
          - name: MOBIUS_REDIS_ADDRESS
            value: "{{ .Values.cache.address }}"
          - name: MOBIUS_REDIS_DATABASE
            value: "{{ .Values.cache.database }}"
          {{- if .Values.cache.usePassword }}
          - name: MOBIUS_REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                name: "{{ .Values.cache.secretName }}"
                key: "{{ .Values.cache.passwordKey }}"
          {{- end }}
          ## END REDIS SECTION
          ## BEGIN OSQUERY SECTION
          - name: MOBIUS_OSQUERY_NODE_KEY_SIZE
            value: "{{ .Values.osquery.nodeKeySize }}"
          - name: MOBIUS_OSQUERY_LABEL_UPDATE_INTERVAL
            value: "{{ .Values.osquery.labelUpdateInterval }}"
          - name: MOBIUS_OSQUERY_DETAIL_UPDATE_INTERVAL
            value: "{{ .Values.osquery.detailUpdateInterval }}"
          - name: MOBIUS_OSQUERY_STATUS_LOG_PLUGIN
            value: "{{ .Values.osquery.logging.statusPlugin }}"
          - name: MOBIUS_OSQUERY_RESULT_LOG_PLUGIN
            value: "{{ .Values.osquery.logging.resultPlugin }}"
          {{- if eq .Values.osquery.logging.statusPlugin "filesystem" }}
          - name: MOBIUS_FILESYSTEM_STATUS_LOG_FILE
            value: "/logs/{{ .Values.osquery.logging.filesystem.statusLogFile }}"
          {{- end }}
          {{- if eq .Values.osquery.logging.resultPlugin "filesystem" }}
          - name: MOBIUS_FILESYSTEM_RESULT_LOG_FILE
            value: "/logs/{{ .Values.osquery.logging.filesystem.resultLogFile }}"
          {{- end }}
          {{- if or (eq .Values.osquery.logging.statusPlugin "filesystem") (eq .Values.osquery.logging.resultPlugin "filesystem") }}
          - name: MOBIUS_FILESYSTEM_ENABLE_LOG_ROTATION
            value: "{{ .Values.osquery.logging.filesystem.enableRotation }}"
          - name: MOBIUS_FILESYSTEM_ENABLE_LOG_COMPRESSION
            value: "{{ .Values.osquery.logging.filesystem.enableCompression }}"
          {{- end }}

          {{- if or (eq .Values.osquery.logging.statusPlugin "firehose") (eq .Values.osquery.logging.resultPlugin "firehose") }}
          - name: MOBIUS_FIREHOSE_REGION
            value: "{{ .Values.osquery.logging.firehose.region }}"
          {{- if eq .Values.osquery.logging.statusPlugin "firehose" }}
          - name: MOBIUS_FIREHOSE_STATUS_STREAM
            value: "{{ .Values.osquery.logging.firehose.statusStream }}"
          {{- end }}
          {{- if eq .Values.osquery.logging.resultPlugin "firehose" }}
          - name: MOBIUS_FIREHOSE_RESULT_STREAM
            value: "{{ .Values.osquery.logging.firehose.resultStream }}"
          {{- end }}
          {{- if ne .Values.osquery.logging.firehose.accessKeyID "" }}
          - name: MOBIUS_FIREHOSE_ACCESS_KEY_ID
            value: "{{ .Values.osquery.logging.firehose.accessKeyID }}"
          - name: MOBIUS_FIREHOSE_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: "{{ .Values.osquery.secretName }}"
                key: "{{ .Values.osquery.logging.firehose.secretKey }}"
          {{ else }}
          - name: MOBIUS_FIREHOSE_STS_ASSUME_ROLE_ARN
            value: "{{ .Values.osquery.logging.firehose.stsAssumeRoleARN }}"
          {{- end }}
          {{- end }}

          {{- if or (eq .Values.osquery.logging.statusPlugin "kinesis") (eq .Values.osquery.logging.resultPlugin "kinesis") }}
          - name: MOBIUS_KINESIS_REGION
            value: "{{ .Values.osquery.logging.kinesis.region }}"
          {{- if eq .Values.osquery.logging.statusPlugin "kinesis" }}
          - name: MOBIUS_KINESIS_STATUS_STREAM
            value: "{{ .Values.osquery.logging.kinesis.statusStream }}"
          {{- end }}
          {{- if eq .Values.osquery.logging.resultPlugin "kinesis" }}
          - name: MOBIUS_KINESIS_RESULT_STREAM
            value: "{{ .Values.osquery.logging.kinesis.resultStream }}"
          {{- end }}
          {{- if ne .Values.osquery.logging.kinesis.accessKeyID "" }}
          - name: MOBIUS_KINESIS_ACCESS_KEY_ID
            value: "{{ .Values.osquery.logging.kinesis.accessKeyID }}"
          - name: MOBIUS_KINESIS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: "{{ .Values.osquery.secretName }}"
                key: "{{ .Values.osquery.logging.kinesis.secretKey }}"
          {{ else }}
          - name: MOBIUS_KINESIS_STS_ASSUME_ROLE_ARN
            value: "{{ .Values.osquery.logging.kinesis.stsAssumeRoleARN }}"
          {{- end }}
          {{- end }}

          {{- if or (eq .Values.osquery.logging.statusPlugin "lambda") (eq .Values.osquery.logging.resultPlugin "lambda") }}
          - name: MOBIUS_LAMBDA_REGION
            value: "{{ .Values.osquery.logging.lambda.region }}"
          {{- if eq .Values.osquery.logging.statusPlugin "lambda" }}
          - name: MOBIUS_LAMBDA_STATUS_FUNCTION
            value: "{{ .Values.osquery.logging.lambda.statusFunction }}"
          {{- end }}
          {{- if eq .Values.osquery.logging.resultPlugin "lambda" }}
          - name: MOBIUS_LAMBDA_RESULT_FUNCTION
            value: "{{ .Values.osquery.logging.lambda.resultFunction }}"
          {{- end }}
          {{- if ne .Values.osquery.logging.lambda.accessKeyID "" }}
          - name: MOBIUS_LAMBDA_ACCESS_KEY_ID
            value: "{{ .Values.osquery.logging.lambda.accessKeyID }}"
          - name: MOBIUS_LAMBDA_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: "{{ .Values.osquery.secretName }}"
                key: "{{ .Values.osquery.logging.lambda.secretKey }}"
          {{ else }}
          - name: MOBIUS_LAMBDA_STS_ASSUME_ROLE_ARN
            value: "{{ .Values.osquery.logging.lambda.stsAssumeRoleARN }}"
          {{- end }}
          {{- end }}


          {{- if or (eq .Values.osquery.logging.statusPlugin "pubsub") (eq .Values.osquery.logging.resultPlugin "pubsub") }}
          - name: MOBIUS_PUBSUB_PROJECT
            value: "{{ .Values.osquery.logging.pubsub.project }}"
          {{- end }}
          {{- if eq .Values.osquery.logging.statusPlugin "pubsub" }}
          - name: MOBIUS_PUBSUB_STATUS_TOPIC
            value: "{{ .Values.osquery.logging.pubsub.statusTopic }}"
          {{- end }}
          {{- if eq .Values.osquery.logging.resultPlugin "pubsub" }}
          - name: MOBIUS_PUBSUB_RESULT_TOPIC
            value: "{{ .Values.osquery.logging.pubsub.resultTopic }}"
          {{- end }}
          ## END OSQUERY SECTION

          ## BEGIN VULNERABILITY PROCESSING
          # Disable vulnerability processing in the main deployment when the
          # dedicated cron is setup to reduce total cpu/memory utilization
          {{- if .Values.vulnProcessing.dedicated }}
          - name: MOBIUS_VULNERABILITIES_DISABLE_SCHEDULE
            value: "true"
          {{- end }}
          ## END Vulnerability Processing

          ## APPEND ENVIRONMENT VARIABLES FROM VALUES
          {{- range $key, $value := .Values.environments }}
          - name: {{ $key }}
            value: {{ $value | quote }}
          {{- end }}
          ## APPEND ENVIRONMENT VARIABLES FROM SECRETS/CMs
          {{- range .Values.envsFrom }}
          - name: {{ .name }}
            valueFrom:
          {{- if .valueFrom.configMapKeyRef }}
              configMapKeyRef:
                name: {{ .valueFrom.configMapKeyRef.name }}
                key: {{ .valueFrom.configMapKeyRef.key }}
          {{- else if .valueFrom.secretKeyRef }}
              secretKeyRef:
                name: {{ .valueFrom.secretKeyRef.name }}
                key: {{ .valueFrom.secretKeyRef.key }}
          {{- end }}
          {{- end }}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop: [ALL]
          privileged: false
          readOnlyRootFilesystem: true
          {{- if .Values.mobius.securityContext.runAsGroup }}
          runAsGroup: {{ int64 .Values.mobius.securityContext.runAsGroup }}
          {{- end }}
          {{- if .Values.mobius.securityContext.runAsUser }}
          runAsUser: {{ int64 .Values.mobius.securityContext.runAsUser }}
          {{- end }}
          {{- if .Values.mobius.securityContext.runAsNonRoot }}
          runAsNonRoot: {{ .Values.mobius.securityContext.runAsNonRoot }}
          {{- end }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: {{ .Values.mobius.listenPort }}
            {{- if .Values.mobius.tls.enabled }}
            scheme: HTTPS
            {{- end }}
        readinessProbe:
          httpGet:
            path: /healthz
            port: {{ .Values.mobius.listenPort }}
            {{- if .Values.mobius.tls.enabled }}
            scheme: HTTPS
            {{- end }}
        {{- if or (.Values.mobius.tls.enabled) (.Values.database.tls.enabled) (eq .Values.osquery.logging.statusPlugin "filesystem") (eq .Values.osquery.logging.resultPlugin "filesystem") }}
        volumeMounts:
          - name: tmp
            mountPath: /tmp
          {{- if .Values.mobius.tls.enabled }}
          - name: mobius-tls
            readOnly: true
            mountPath: /secrets/tls
          {{- end }}
          {{- if .Values.database.tls.enabled }}
          - name: mysql-tls
            readOnly: true
            mountPath: /secrets/mysql
          {{- end }}
          {{- if or (eq .Values.osquery.logging.statusPlugin "filesystem") (eq .Values.osquery.logging.resultPlugin "filesystem") }}
          - name: osquery-logs
            mountPath: /logs
          {{- end }}
          {{- with .Values.mobius.extraVolumeMounts }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
        {{- end }}
      {{- if .Values.gke.cloudSQL.enableProxy }}
      - name: cloudsql-proxy
        image: "{{ .Values.gke.cloudSQL.imageRepository }}:{{ .Values.gke.cloudSQL.imageTag }}"
        command:
        - "/cloud_sql_proxy"
        - "-verbose={{ .Values.gke.cloudSQL.verbose}}"
        - "-instances={{ .Values.gke.cloudSQL.instanceName }}=tcp:3306"
        resources:
          limits:
            cpu: 0.5 # 500Mhz
            memory: 150Mi
          requests:
            cpu: 0.1 # 100Mhz
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop: [ALL]
          privileged: false
          readOnlyRootFilesystem: true
          {{- if .Values.mobius.securityContext.runAsGroup }}
          runAsGroup: {{ int64 .Values.mobius.securityContext.runAsGroup }}
          {{- end }}
          {{- if .Values.mobius.securityContext.runAsUser }}
          runAsUser: {{ int64 .Values.mobius.securityContext.runAsUser }}
          {{- end }}
          {{- if .Values.mobius.securityContext.runAsNonRoot }}
          runAsNonRoot: {{ .Values.mobius.securityContext.runAsNonRoot }}
          {{- end }}
      {{- end }}
      hostPID: false
      hostNetwork: false
      hostIPC: false
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8}}
      {{- end }}
      serviceAccountName: mobius
      {{- if or (.Values.mobius.tls.enabled) (.Values.database.tls.enabled) (eq .Values.osquery.logging.statusPlugin "filesystem") (eq .Values.osquery.logging.resultPlugin "filesystem") }}
      volumes:
        - name: tmp
          emptyDir:
        {{- if .Values.mobius.tls.enabled }}
        - name: mobius-tls
          secret:
            {{- if .Values.mobius.tls.uniqueTLSSecret }}
            secretName: "{{ .Values.mobius.tls.secretName }}"
            {{- else }}
            secretName: "{{ .Values.mobius.secretName }}"
            {{- end }}
        {{- end }}
        {{- if .Values.database.tls.enabled }}
        - name: mysql-tls
          secret:
            secretName: "{{ .Values.database.secretName }}"
        {{- end }}
        {{- if or (eq .Values.osquery.logging.statusPlugin "filesystem") (eq .Values.osquery.logging.resultPlugin "filesystem") }}
        - name: osquery-logs
          emptyDir:
            sizeLimit: "{{ .Values.osquery.logging.filesystem.volumeSize }}"
        {{- end }}
        {{- with .Values.mobius.extraVolumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
